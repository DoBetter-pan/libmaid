syntax = "proto2";

import "google/protobuf/descriptor.proto";

package maid.proto;

message MaidServiceOptions
{
	// if notify set true, one-way mode active.
	// all method one-way mode active.
	//
	// returns(XX) will be ingored:
	// Service::Message* response will be NULL.
	// Service::Closure* done will do nothing.
	// Service_Stub::CallMethod response == NULL && done == NULL is required.
	// Service_Stub::Message* request success send to destination is unknown

	optional bool notify = 1;
}

extend google.protobuf.ServiceOptions
{
	optional MaidServiceOptions service_options = 1001;
}

message MaidMethodOptions
{
	// if notify set true, one-way mode active.
	// override the MaidServiceOptions.notify
	//
	// returns(XX) will be ingored:
	// Service::Message* response will be NULL.
	// Service::Closure* done will do nothing.
	// Service_Stub::CallMethod response == NULL && done == NULL is required.
	// Service_Stub::Message* request success send to destination is unknown
	optional bool notify = 1;

    // TODO
	optional int64 time_out = 2 [default = -1]; // -1: never time out
}

extend google.protobuf.MethodOptions
{
	optional MaidMethodOptions method_options = 1001;
}
